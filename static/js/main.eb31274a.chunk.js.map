{"version":3,"sources":["icons/DroplistAddButtonIcon.tsx","components/Droplist/Droplist.tsx","components/App/App.tsx","hooks/useForm.ts","index.tsx"],"names":["Icon","className","fill","viewBox","xmlns","d","Droplist","memo","withPersonal","inputClass","inputTitle","labelClass","upSelectClass","selectId","selectClass","required","forPhone","values","readOnly","placeholder","defaultState","setValues","secondName","name","inputRef","array","currentChoise","setCurrentChoise","useState","value","setValue","isSelectOpen","setIsSelectOpen","isInputFocus","setIsInputFocus","filteredArray","setFilteredArray","text","key","selectedValue","setSelectedValue","isFisrtStatePlace","setIsFisrtStatePlace","isItemsUp","setIsItemsUp","isValueInArray","setIsValueInArray","itemsRef","useRef","handleChangeMainValue","prev","doNotScrollPage","useCallback","e","indexOf","preventDefault","handleLiKeyDown","item","window","addEventListener","nextElement","target","nextSibling","nodeName","focus","firstElement","closest","firstChild","prevElement","previousSibling","lastElement","lastChild","console","log","handleTestSelect","setTimeout","removeEventListener","some","i","handleSelect","handleClose","handleOpen","document","closeDrop","useEffect","isOldValues","length","stateId","undefined","id","arrayBeforeFilter","unshift","filter","toLowerCase","current","getBoundingClientRect","bottom","innerHeight","k","onChange","ref","slice","onClick","onFocus","onBlur","relatedTarget","onKeyDown","element","click","autoComplete","map","tabIndex","DroplistAddButtonIcon","App","handleChange","evt","input","useForm","firstDroplist","secondDroplist","thirdDroplist","ReactDOM","render","StrictMode","querySelector"],"mappings":"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","file":"static/js/main.eb31274a.chunk.js","sourcesContent":["import { IIconProps } from './interfaces';\n\nconst Icon: React.FC<IIconProps> = ({ className, fill }) => {\n  return (\n    <svg\n      viewBox=\"0 0 14 14\"\n      className={className}\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M13.4168 7.91668H7.91683V13.4167H6.0835V7.91668H0.583496V6.08334H6.0835V0.583344H7.91683V6.08334H13.4168V7.91668Z\"\n        className={fill}\n      />\n    </svg>\n  );\n};\n\nexport default Icon;\n","import { memo, useCallback, useEffect, useRef, useState } from 'react';\n\nimport type { IValue } from '../../interfaces';\n\nimport DroplistAddButtonIcon from '../../icons/DroplistAddButtonIcon';\nimport './Droplist.scss';\n\nexport type ArrayObject = {\n  text?: string;\n  key?: string;\n  [index: string]: string;\n};\n\ninterface DroplistProps {\n  className?: string;\n  withPersonal?: boolean;\n  inputClass?: string;\n  inputTitle?: string;\n  labelClass?: string;\n  upSelectClass?: string;\n  selectId: string;\n  selectClass?: string;\n  required?: boolean;\n  forPhone?: boolean;\n  values: IValue;\n  readOnly?: boolean;\n  placeholder?: string;\n  defaultState?: string;\n  setValues: React.Dispatch<React.SetStateAction<IValue>>;\n  secondName?: string;\n  name: string;\n  inputRef?: React.MutableRefObject<HTMLInputElement | null>;\n  array: ArrayObject[];\n  currentChoise?: IValue;\n  setCurrentChoise?: React.Dispatch<React.SetStateAction<IValue>>;\n}\n\nconst Droplist: React.FC<DroplistProps> = memo(\n  ({\n    className,\n    withPersonal,\n    inputClass,\n    inputTitle,\n    labelClass,\n    upSelectClass,\n    selectId,\n    selectClass,\n    required,\n    forPhone,\n    values,\n    readOnly,\n    placeholder,\n    defaultState,\n    setValues,\n    secondName,\n    name,\n    inputRef,\n    array,\n    currentChoise,\n    setCurrentChoise,\n  }) => {\n    const [value, setValue] = useState<string>('');\n    const [isSelectOpen, setIsSelectOpen] = useState<boolean>(false);\n    const [isInputFocus, setIsInputFocus] = useState<boolean>(false);\n    const [filteredArray, setFilteredArray] = useState<ArrayObject[]>(array);\n    const [selectedValue, setSelectedValue] = useState<ArrayObject>({\n      text: '',\n      key: '',\n    });\n    const [isFisrtStatePlace, setIsFisrtStatePlace] = useState<boolean>(true);\n    const [isItemsUp, setIsItemsUp] = useState<boolean>(false);\n    const [isValueInArray, setIsValueInArray] = useState<boolean>(false);\n    const itemsRef = useRef<HTMLDivElement | null>(null);\n\n    function handleChangeMainValue(value: string): void {\n      if (!value) {\n        setValues((prev) => {\n          return { ...prev, [name]: '' };\n        });\n        setSelectedValue({ key: '', text: '' });\n        setCurrentChoise && setCurrentChoise({});\n      }\n    }\n\n    function handleChange(e: React.ChangeEvent<HTMLInputElement>): void {\n      handleChangeMainValue(e.target.value);\n      setValue(e.target.value);\n      if (!isSelectOpen) handleOpen();\n    }\n\n    function handleFocusInput(): void {\n      setIsInputFocus(true);\n      handleOpen();\n    }\n\n    function handleBlurInput(e: React.FocusEvent<HTMLInputElement>): void {\n      setIsInputFocus(false);\n      if (\n        !withPersonal &&\n        (!e.relatedTarget || !e.relatedTarget.closest(`#${selectId}`))\n      ) {\n        if (!values[name]) {\n          setValue('');\n          handleChangeMainValue('');\n          handleClose();\n        } else if (selectedValue.text !== value) {\n          setValue('');\n          handleChangeMainValue('');\n          handleClose();\n        } else {\n          handleClose();\n        }\n      } else if (\n        withPersonal &&\n        (!e.relatedTarget || !e.relatedTarget.closest(`#${selectId}`))\n      ) {\n        handleTestSelect(value || values[name]);\n      }\n    }\n\n    const doNotScrollPage = useCallback((e: any): void => {\n      if (['ArrowDown', 'ArrowUp'].indexOf(e.key) > -1) {\n        e.preventDefault();\n      }\n    }, []);\n\n    function handleKeyDown(e: any): void {\n      window.addEventListener('keydown', doNotScrollPage);\n      if (e.key === 'ArrowDown') {\n        const element = e.target.closest(`#${selectId}`).lastChild.firstChild;\n        if (element) element.focus();\n      } else if (e.key === 'Enter') {\n        const element = e.target.closest(`#${selectId}`).lastChild.firstChild;\n        e.preventDefault();\n        if (element) element.click();\n      }\n      setTimeout(() => {\n        window.removeEventListener('keydown', doNotScrollPage);\n      }, 1000);\n    }\n\n    function handleLiKeyDown(e: any, text: string, item?: IValue): void {\n      window.addEventListener('keydown', doNotScrollPage);\n      if (e.key === 'ArrowDown') {\n        const nextElement = e.target.nextSibling;\n        if (nextElement && nextElement.nodeName === 'DIV') {\n          nextElement.focus();\n        } else {\n          const firstElement = e.target.closest('#ul').firstChild;\n          if (firstElement && firstElement.nodeName === 'DIV')\n            firstElement.focus();\n        }\n      } else if (e.key === 'ArrowUp') {\n        const prevElement = e.target.previousSibling;\n        if (prevElement && prevElement.nodeName === 'DIV') {\n          prevElement.focus();\n        } else {\n          const lastElement = e.target.closest('#ul').lastChild;\n          console.log(lastElement);\n          if (lastElement && lastElement.nodeName === 'DIV') {\n            lastElement.focus();\n          } else if (\n            lastElement.previousSibling &&\n            lastElement.previousSibling.nodeName === 'DIV'\n          ) {\n            lastElement.previousSibling.focus();\n          }\n        }\n      } else if (e.key === 'Enter') {\n        handleTestSelect(text, item);\n      }\n      setTimeout(() => {\n        window.removeEventListener('keydown', doNotScrollPage);\n      }, 1000);\n    }\n\n    function handleTestSelect(text: string, item?: IValue): void {\n      let key;\n      array.some((i) => {\n        if (i.text === text) {\n          key = i.key;\n          return true;\n        }\n        return false;\n      });\n      if (key) {\n        handleSelect(key, text, item);\n      } else {\n        handleSelect('personal', text);\n      }\n    }\n\n    function handleSelect(key: string, text: string, item?: IValue): void {\n      if (key === 'personal') {\n        if (secondName) {\n          setValues((prev) => {\n            return { ...prev, [name]: text, [secondName]: '' };\n          });\n        } else {\n          setValues((prev) => {\n            return { ...prev, [name]: text };\n          });\n        }\n      } else {\n        if (secondName && key !== selectedValue.key) {\n          setValues((prev) => {\n            return { ...prev, [name]: key, [secondName]: '' };\n          });\n        } else {\n          setValues((prev) => {\n            return { ...prev, [name]: key };\n          });\n        }\n        setValue(text);\n      }\n      setSelectedValue({ key: key, text: text });\n      setCurrentChoise && item && setCurrentChoise(item);\n      handleClose();\n    }\n\n    function handleOpen() {\n      if (!isSelectOpen) {\n        document.addEventListener('click', closeDrop);\n        setIsSelectOpen(true);\n      } else if (!isInputFocus) {\n        handleClose();\n      }\n    }\n\n    function handleClose() {\n      document.removeEventListener('click', closeDrop);\n      setIsSelectOpen(false);\n    }\n\n    const closeDrop = useCallback((e: any) => {\n      if (!e.target.closest('#no-close')) handleClose();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n      if (selectedValue.key !== 'personal') {\n        let isOldValues;\n        let text: string = '';\n        isOldValues = array.some((i) => {\n          if (i.text && i.text === selectedValue.text) {\n            text = i.text;\n          }\n          return i.text === selectedValue.text;\n        });\n\n        if (!isOldValues) {\n          setValue('');\n        } else {\n          setValue(text);\n        }\n      }\n    }, [array, selectedValue]);\n\n    useEffect(() => {\n      if (values[name] && !value && array.length > 0) {\n        let text: string = '';\n        let stateId: number | undefined = undefined;\n        if (forPhone && currentChoise) {\n          array.some((i, id) => {\n            if (i.text === currentChoise.text) {\n              stateId = id;\n              return true;\n            }\n            return false;\n          });\n          setValue(currentChoise.text);\n          setSelectedValue({\n            key: currentChoise.key,\n            text: currentChoise.text,\n          });\n          if (setCurrentChoise && stateId != null) {\n            setCurrentChoise(array[stateId]);\n          }\n        } else {\n          array.some((i, id) => {\n            if (i.key === values[name] && i.text) {\n              stateId = id;\n              text = i.text;\n              return true;\n            }\n            return false;\n          });\n          if (text) {\n            setValue(text);\n            setSelectedValue({ key: values[name], text: text });\n            if (setCurrentChoise && stateId != null) {\n              setCurrentChoise(array[stateId]);\n            }\n          } else {\n            setValue(values[name]);\n            setSelectedValue({ key: 'personal', text: values[name] });\n          }\n        }\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [array]);\n\n    useEffect(() => {\n      if (value) {\n        let arrayBeforeFilter: ArrayObject[];\n        arrayBeforeFilter = array;\n        if (selectedValue.key) {\n          const isNewChoise = arrayBeforeFilter.some((i) => {\n            if (i) {\n              return selectedValue.key === i.key;\n            }\n            return false;\n          });\n          !isNewChoise && arrayBeforeFilter.unshift(selectedValue);\n        }\n        setFilteredArray(\n          selectedValue.key !== values[name] || selectedValue.text !== value\n            ? arrayBeforeFilter.filter((item) => {\n                if (item.text) {\n                  return (\n                    item.text.toLowerCase().indexOf(value.toLowerCase()) >= 0\n                  );\n                } else {\n                  return undefined;\n                }\n              })\n            : arrayBeforeFilter,\n        );\n      } else {\n        setFilteredArray(array);\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [array, value, selectedValue]);\n\n    useEffect(() => {\n      if (defaultState && isFisrtStatePlace && !values[name]) {\n        let key: string = '';\n        let stateId: number | undefined = undefined;\n        array.some((i, id) => {\n          if (i.text === defaultState && i.key) {\n            stateId = id;\n            key = i.key;\n            setIsFisrtStatePlace(false);\n            return true;\n          }\n          return false;\n        });\n        if (key) {\n          setValue(defaultState);\n          setValues((prev) => {\n            return { ...prev, [name]: key };\n          });\n          setSelectedValue({ key: key, text: defaultState });\n          if (setCurrentChoise && stateId != null) {\n            setCurrentChoise(array[stateId]);\n          }\n        }\n      } else {\n        setIsFisrtStatePlace(false);\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [array, defaultState, isFisrtStatePlace]);\n\n    useEffect(() => {\n      if (\n        itemsRef &&\n        itemsRef.current &&\n        itemsRef.current.previousSibling &&\n        filteredArray\n      ) {\n        // console.log(itemsRef.current.previousSibling.getBoundingClientRect().bottom, (filteredArray.length > 4 ? 260 : filteredArray.length*40), window.innerHeight)\n        if (\n          itemsRef.current.previousSibling.getBoundingClientRect().bottom +\n            (filteredArray.length > 4 ? 260 : filteredArray.length * 40) >\n          window.innerHeight\n        ) {\n          setIsItemsUp(true);\n        } else {\n          setIsItemsUp(false);\n        }\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isSelectOpen, filteredArray, itemsRef.current]);\n\n    useEffect(() => {\n      let k;\n      filteredArray.some((i) => {\n        if (i.text === value) {\n          k = i.text;\n          return true;\n        }\n        return false;\n      });\n      if (k) {\n        setIsValueInArray(true);\n      } else {\n        setIsValueInArray(false);\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    useEffect(() => {\n      if (forPhone && selectedValue.key && value !== selectedValue.text) {\n        setSelectedValue({ key: '', text: '' });\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    return (\n      <div\n        id=\"no-close\"\n        className={`droplist${className ? ` ${className}` : ''}`}\n      >\n        <div\n          id={selectId}\n          className={`droplist__select${\n            upSelectClass ? ` ${upSelectClass}` : ''\n          }`}\n        >\n          <label\n            className={`${\n              labelClass\n                ? labelClass\n                : `droplist__label${\n                    isInputFocus ? ' droplist__label_focused' : ''\n                  }`\n            }`}\n          >\n            {\n              <input\n                required={required}\n                className={`droplist__input${\n                  inputClass ? ` ${inputClass}` : ''\n                }${readOnly ? ' droplist__input_readonly' : ''}`}\n                placeholder={placeholder}\n                name={name}\n                readOnly={readOnly}\n                onChange={handleChange}\n                ref={inputRef}\n                value={\n                  forPhone\n                    ? selectedValue.key\n                      ? value.slice(0, value.indexOf(' '))\n                      : value\n                    : value\n                }\n                onClick={handleOpen}\n                onFocus={handleFocusInput}\n                onBlur={handleBlurInput}\n                onKeyDown={handleKeyDown}\n                autoComplete=\"new-password\"\n              />\n            }\n            {inputTitle && inputTitle}\n          </label>\n          {isSelectOpen && (\n            <div\n              ref={itemsRef}\n              id=\"ul\"\n              className={`droplist__items${\n                isSelectOpen ? ' droplist__items_open' : ''\n              }${selectClass ? ` ${selectClass}` : ''}${\n                value && withPersonal ? ' droplist__items_with-pesronal' : ''\n              }${\n                isItemsUp ? ' droplist__items_up' : ' droplist__items_bottom'\n              }`}\n            >\n              {filteredArray &&\n                filteredArray.map((item, id) => (\n                  <div\n                    className=\"droplist__item\"\n                    key={id}\n                    tabIndex={id + 1}\n                    onClick={() => {\n                      handleSelect(\n                        item.key ? item.key : '',\n                        item.text ? item.text : '',\n                        item,\n                      );\n                    }}\n                    onKeyDown={(e) => {\n                      handleLiKeyDown(e, item.text ? item.text : '', item);\n                    }}\n                  >\n                    <span className=\"droplist__text\">{item.text}</span>\n                  </div>\n                ))}\n              {value && !isValueInArray && withPersonal && (\n                <div\n                  className=\"droplist__item\"\n                  tabIndex={filteredArray && filteredArray.length + 1}\n                  onClick={() => {\n                    handleTestSelect(value);\n                  }}\n                  onKeyDown={(e) => {\n                    handleLiKeyDown(e, value);\n                  }}\n                >\n                  {' '}\n                  <DroplistAddButtonIcon\n                    className=\"droplist__item-plus\"\n                    fill=\"droplist__item-plus-fill\"\n                  />{' '}\n                  Добавить{' '}\n                  <span className=\"droplist__text droplist__text_blue\">\n                    {value}\n                  </span>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  },\n);\n\nexport default Droplist;\n","import useForm from '../../hooks/useForm';\nimport Droplist from '../Droplist/Droplist';\nimport './App.scss';\n\nconst App: React.FC<{}> = () => {\n  const { values, setValues } = useForm<string>();\n  const arrayForDroplist = [\n    { key: 'Вариант 1', text: 'Вариант 1' },\n    { key: 'Вариант 2', text: 'Вариант 2' },\n    { key: 'Вариант 3', text: 'Вариант 3' },\n    { key: 'Вариант 4', text: 'Вариант 4' },\n    { key: 'Вариант 5', text: 'Вариант 5' },\n  ];\n  const arrayForDroplistTwo = [\n    { key: 'Мужской', text: 'Мужской' },\n    { key: 'Женский', text: 'Женский' },\n  ];\n  const arrayForDroplistThree = [\n    { key: 'Пицца', text: 'Пицца' },\n    { key: 'Суши', text: 'Суши' },\n  ];\n\n  return (\n    <>\n      <header className=\"header\">\n        <h1 className=\"header__title\">Dropdown-select</h1>\n      </header>\n      <main className=\"main root__main\">\n        <section className=\"section main__section\">\n          <h2 className=\"section__title\">Дропдаун с поиском</h2>\n          <div className=\"section__container\">\n            <Droplist\n              className=\"section__droplist\"\n              inputClass=\"input input_with-arrow\"\n              selectId=\"firstDroplist\"\n              values={values}\n              placeholder=\"Выберите значение\"\n              setValues={setValues}\n              name=\"firstDroplist\"\n              array={arrayForDroplist}\n            />\n            <div className=\"section__subtitle-container\">\n              <h3 className=\"section__subtitle\">Выбранное значение: </h3>\n              <p className=\"section__value\">{values.firstDroplist}</p>\n            </div>\n          </div>\n        </section>\n        <section className=\"section main__section\">\n          <h2 className=\"section__title\">Дропдаун без поиска</h2>\n          <div className=\"section__container\">\n            <Droplist\n              className=\"section__droplist\"\n              inputClass=\"input input_with-arrow\"\n              selectId=\"secondDroplist\"\n              values={values}\n              readOnly={true}\n              placeholder=\"Пол\"\n              setValues={setValues}\n              name=\"secondDroplist\"\n              array={arrayForDroplistTwo}\n            />\n            <div className=\"section__subtitle-container\">\n              <h3 className=\"section__subtitle\">Выбранное значение: </h3>\n              <p className=\"section__value\">{values.secondDroplist}</p>\n            </div>\n          </div>\n        </section>\n        <section className=\"section main__section\">\n          <h2 className=\"section__title\">\n            Дропдаун с добавлением собственного варианта\n          </h2>\n          <div className=\"section__container\">\n            <Droplist\n              className=\"section__droplist\"\n              inputClass=\"input input_with-arrow\"\n              selectId=\"thirdDroplist\"\n              values={values}\n              placeholder=\"Любимая еда\"\n              withPersonal={true}\n              setValues={setValues}\n              name=\"thirdDroplist\"\n              array={arrayForDroplistThree}\n            />\n            <div className=\"section__subtitle-container\">\n              <h3 className=\"section__subtitle\">Выбранное значение: </h3>\n              <p className=\"section__value\">{values.thirdDroplist}</p>\n            </div>\n          </div>\n        </section>\n      </main>\n      <footer className=\"footer\">\n        <div className=\"footer__container\">\n          <p className=\"footer__text\">&#169; Gendrarium</p>\n        </div>\n      </footer>\n    </>\n  );\n};\n\nexport default App;\n","import { useState } from 'react';\r\n\r\ntype Value<T> = { [index: string]: T };\r\n\r\nexport type HandleChange<T = string> = (\r\n  e: React.ChangeEvent<HTMLInputElement> | { target: { [index: string]: any } },\r\n  k?: T,\r\n) => void;\r\n\r\ntype Form<T> = {\r\n  values: Value<T>;\r\n  handleChange: HandleChange<T>;\r\n  setValues: React.Dispatch<React.SetStateAction<Value<T>>>;\r\n};\r\n\r\nexport default function useForm<T = string | number>(): Form<T> {\r\n  const [values, setValues] = useState<Value<T>>({});\r\n\r\n  const handleChange = (\r\n    evt:\r\n      | React.ChangeEvent<HTMLInputElement>\r\n      | { target: { [index: string]: any } },\r\n    key?: T,\r\n  ): void => {\r\n    const input = evt.target;\r\n    const value: T = key ? key : input.value;\r\n    const name: string = input.name;\r\n    setValues((prev) => {\r\n      return { ...prev, [name]: value };\r\n    });\r\n  };\r\n\r\n  return { values, handleChange, setValues };\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App/App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n          <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.querySelector('.root'),\n);\n"],"sourceRoot":""}